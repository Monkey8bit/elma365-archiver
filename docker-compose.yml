services:
  rabbitmq:
    image: rabbitmq:management-alpine
    ports:
      - 15672:15672
      - ${RABBITMQ_PORT}:${RABBITMQ_PORT}
    hostname: rabbitmq
    restart: always

    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: -rabbit disk_free_limit 1073741824
    volumes:
      - ./compose_conf/rabbitmq:/var/lib/rabbitmq
      - ./build/rabbitmq/definitions.json:/opt/definitions.json
      - ./build/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
  postgres:
    image: postgres:14-alpine
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./compose_conf/postgres:/var/lib/postgresql/data
      - ./build/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
  minio:
    image: minio/minio:latest
    ports:
      - ${MINIO_PORT}:${MINIO_PORT}
      - ${MINIO_CONSOLE_PORT}:${MINIO_CONSOLE_PORT}
    restart: always
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - ./compose_conf/minio:/data
    command: server --address ":${MINIO_PORT}" --console-address ":${MINIO_CONSOLE_PORT}" /data
  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    depends_on:
      - minio
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_HOST=${MINIO_HOST}
      - MINIO_PORT=${MINIO_PORT}
      - MINIO_FILES_BUCKET=${MINIO_FILES_BUCKET}
      - MINIO_ARCHIVES_BUCKET=${MINIO_ARCHIVES_BUCKET}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_ARCHIVER_QUEUE=${RABBITMQ_ARCHIVER_QUEUE}
    restart: always
  archiver:
    build:
      context: ./archiver
      dockerfile: Dockerfile
    depends_on:
      - minio
      - rabbitmq
      - postgres
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_HOST=${MINIO_HOST}
      - MINIO_PORT=${MINIO_PORT}
      - MINIO_FILES_BUCKET=${MINIO_FILES_BUCKET}
      - MINIO_ARCHIVES_BUCKET=${MINIO_ARCHIVES_BUCKET}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
    restart: always
  bucket_builder:
    build:
      context: ./build/minio
      dockerfile: Dockerfile
    depends_on:
      - minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    entrypoint: "./init.sh"
  mailer:
    build: 
      context: ./mailer/
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_HOST=${MINIO_HOST}
      - MINIO_PORT=${MINIO_PORT}
      - MINIO_PROXY_PORT=${MINIO_PROXY_PORT}
      - MINIO_PROXY_HOST=${MINIO_PROXY_HOST}
      - MINIO_FILES_BUCKET=${MINIO_FILES_BUCKET}
      - MINIO_ARCHIVES_BUCKET=${MINIO_ARCHIVES_BUCKET}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_MAILER_QUEUE=${RABBITMQ_MAILER_QUEUE}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_SENDER=${SMTP_SENDER}
    restart: always
  minio-proxy:
    build: 
      context: ./build/minio-proxy
      dockerfile: Dockerfile
    ports:
      - ${MINIO_PROXY_PORT}:80
    volumes:
      - ./compose_conf/certbot:/etc/ssl/certs
    environment:
      - MINIO_HOST=${MINIO_HOST}
      - MINIO_PORT=${MINIO_PORT}
      - MINIO_PROTOCOL=${MINIO_PROTOCOL}
    command: /bin/sh -c "env && envsubst '$$MINIO_HOST, $$MINIO_PORT, $$MINIO_PROTOCOL' < '/etc/nginx/conf.d/default.conf.template' > '/etc/nginx/conf.d/default.conf' && nginx -g 'daemon off;'"
  certbot:
    image: certbot/certbot
    volumes:
      - ./compose_conf/certbot:/etc/letsencrypt
    entrypoint: "/bin/sh -c 'certbot certonly --standalone --preferred-challenges http -d ${DOMAIN_NAME} && cp -r /etc/letsencrypt/* /etc/letsencrypt/live/${DOMAIN_NAME}/ /etc/letsencryps/'"